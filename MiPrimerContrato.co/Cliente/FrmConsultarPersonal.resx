<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>