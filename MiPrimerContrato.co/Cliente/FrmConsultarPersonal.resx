<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>